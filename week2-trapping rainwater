class Solution {
public:
    int trap(vector<int>& height) {
        stack<int> st;
        int water = 0;

        for (int i = 0; i < height.size(); i++) {
            while (!st.empty() && height[i] > height[st.top()]) {
                int top = st.top(); st.pop();

                if (st.empty()) break;

                int left = st.top();
                int width = i - left - 1;
                int bounded = min(height[i], height[left]) - height[top];
                if (bounded > 0) {
                    water += width * bounded;
                }
            }

            st.push(i);
        }

        return water;
    }
};
